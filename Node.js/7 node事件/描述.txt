Node.js是单进程单线程的应用程序,但是因为v8引擎提供了异步执行回调接口,通过这些接口可以处理
大量的并发,所以性能非常高
Node.js几乎每一个api都支持回调函数
Node.js基本上所有的事件机制都是用设计模式中观察者模式实现
Node.js单线程类似进入一个while(true)的事件循环,直到没有事件观察者退出,每个异步事件都生产一个事件观察者如果有事件发生就调用该回调函数

事件驱动程序
nodejs使用事件驱动模型,当web server接收到请求,就把它关闭然后进行处理然后去服务下一个web请求
当这个请求完成,他被放回处理队列,当到达对象开头,这个结果被返回给用户
这个模型非常高效可扩展性非常强,因为webserver一直接受请求而不等待任何读写操作
在事件驱动模型中,会生成一个主循环来监听事件,当检测到事件时触发回调函数


开启进程

开启线程
初始化数据 window/document/location
while(true){
    初始化事件列表
    根据事件修改修改数据
    根据数据渲染页面
}

